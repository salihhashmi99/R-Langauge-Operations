installed.packages(dplyr)
install.packages(dplyr)
install.packages("dplyr")
source("~/.active-rstudio-document")
install.packages(dplyr)
summary(airquality)
select(presidential, name, party)
filter(airquality)
filter(airquality, min)
filter(airquality, Temp=="95.00")
install.packages("tidyverse")
install.packages("dplyr")
select * from airquality
install.packages("readxl")
install.packages("readr")
library(ggplot2)
install.packages("ggplot2")
data <- read.csv("C:/Users/Salih/Downloads/iris.data")
data <- read.csv("C:/Users/Salih/Downloads/iris.data")
head(data)
tail(data)
selected_data <- select(data, Sepal.Length, Sepal.Width, Petal.Length)
selected_data <- select(data, x5.1, x0.2, Iris.setosa)
selected_data <- select(data, x5.1, x0.2, iris)
selected_data <- select(data, Sepal.Length, Sepal.Width, Petal.Length)
install.packages("dplyr")
source("~/.active-rstudio-document")
selected_data <- select(data, Sepal.Length, Sepal.Width, Petal.Length)
head(selected_data)
selected_data <- select[c(data, Sepal.Length, Sepal.Width, Petal.Length)]
selected_data <- select(data, Sepal.Length, Sepal.Width, iris)
selected_data <- select(iris, Sepal.Length, Sepal.Width, Petal.Length)
head(selected_data)
load("~/.RData")
load("~/.RData")
installed.packages("dplyr")
head(data)
library(dplyr)
search()
# Select specific columns from the dataset
selected_data <- select(data, Sepal.Length, Sepal.Width, Petal.Length)
# Select specific columns from the dataset
selected_data <- select(data, x5.1, x3.5, x0.2)
select(data)
print(data)
# View the first few rows of the selected data
head(selected_data)
# Apply the select function to choose specific columns
iris <- data %>%
select(X5.1, X3.5, X1.4, X0.2)
iris <- data %>%
select(X5.1, X3.5, X1.4, X0.2)
iris <- data %>%
select(X5.1, X3.5, X1.4, X0.2)
select(X5.1, X3.5, X1.4, X0.2)
select(iris, X5.1, X3.5, X1.4, X0.2)
head(data)
data <- select(iris, X5.1, X3.5, X1.4, X0.2)
head(data)
data <- filter(iris, x3.5==3.1)
data <- filter(iris, x3.5=="3.1")
data <- filter(x3.5==3.1)
data <- filter(x3.5 > 3.6)
data <- filter(x3.5>3.6)
data <- filter(x3.5>3.6)
data <- filter(iris, x3.5>3.6)
data <- filter(iris, x3.5>3.6)
filter(data, X3.5 > 3.6)
data <- filter(data, X3.5 > 3.6)
print(iris)
head(result)
result <- filter(iris, X0.2==0.4) %>%
select(iris, X5.1,X0.2)
result <- iris %>%
filter(iris, X0.2 == 0.4) %>%
select(iris, X5.1, X0.2)
result <- filter(iris, X0.2 == 0.4) %>% select(iris, X5.1, X0.2)
result <-  select(filter(iris, X0.2 == 0.4), X5.1,X0.2)
head(result)
head(result)
result <- mutate(iris, X7.2 = X3.5+X1.4+X0.2)
head(result)
head(result)
result <- mutate(X3.5=X3.5*2)
head(result)
result <- mutate(X3.5 = X3.5*2)
head(result)
result <- mutate(X3.5 = X3.5-1)
head(result)
result <- mutate(iris, X3.5 = X3.5-1)
head(result)
result <- mutate(iris, category = ifelse(X1.4 >=1.5, "Normal","Dangerous"))
result <- mutate(iris, category = ifelse(X1.4 >=1.5, "Normal","Dangerous"))
head(result)
result <- summarise(iris,
mean_X5.1 = mean(X5.1),
max_X3.5 = max(X3.5),
min_X1.4 = min(X1.4))
print(result)
result <- arrange(iris)
print(result)
head(result)
result <- arrange(iris, X5.1,X3.5,X4.1,X0.2)
head(result)
result <- arrange(iris, X5.1)
head(result)
head(result)
result <- iris %>%
select(iris, X5.1, X3.5, X1.4)%>%
filter(iris, X3.5==3.2)%>%
arrange(iris)
head(result)
result <- iris %>%
select(iris, X5.1, X3.5, X1.4)%>%
filter(iris, X3.5==3.2)%>%
arrange(iris)%>%
head(result)
result <- iris %>%
select(iris, X5.1, X3.5, X1.4)%>%
filter(iris, X3.5==3.2)%>%
arrange(iris)%>%
result <- iris %>%
select(iris, X5.1, X3.5, X1.4)%>%
filter(iris, X3.5==3.2)%>%
arrange(iris)
head(result)
result <-  select(filter(iris, X0.2 <= 0.4), X5.1,X0.2)
head(result)
result <-  select(filter(iris, X0.2 <= 0.4), X5.1,X0.2)%>%
arrange(result)
head(result)
result <-  select(iris, X5.1,X0.2)%>%
filter(result, X0.2 <= 0.4)%>%
arrange(result)
head(result)
install.packages("tidyr")
# Example: Convert wide data to long data
long_data <- gather(iris, key = "Variable", value = "Value", -id)
long_data <- gather(iris, key = "X3.5", value = "3.2", -Species)
long_data <- gather(iris, key = "X3.5", value = "3.2", X3.5)
ggplot(iris, aes(y = Sepal.Length)) +
geom_boxplot()
ggplot(iris, aes(y = X3.5)) +
geom_boxplot()
ggplot(iris) + geom_boxplot()
library(tidyr)
result <- gather(iris,X5.1,X3.5,X1.4,X0.2)
head(result)
result <- iris %>% separate(X5.1, c("digits", "decimals"), sep = ".")
head(result)
library(dplyr)
result <- iris %>% separate(X5.1, i("digits", "decimals"), sep = ".")
head(result)
result <- iris %>% unite(X4.0, c("X3.5", "X1.4", "X0.2"), sep = "_")
head(result)
print(iris)
print(missing_value)
#missing_value <- sapply(iris, function(x) sum(is.na(x)))
missing_value <- sum(is.na(iris))
print(missing_value)
library(ggplot2)
ggplot(iris, aes(x=X5.1, y=x3.5))+
geom_point()+labs(x="X5.1",y="X3.5")+
ggtitle("Scatter the plot for X5.1 and X3.5")
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point() +
labs(x = "Sepal.Length", y = "Sepal.Width") +
ggtitle("Scatter plot for Sepal.Length and Sepal.Width")
ggplot(iris, aes(x=X5.1, y=x3.5))+
geom_point()+labs(x="X5.1",y="X3.5")+
ggtitle("Scatter the plot for X5.1 and X3.5")
